import { DataSource } from '@forestadmin/datasource-toolkit';
import Chart from './access/chart';
import Count from './access/count';
import CountRelated from './access/count-related';
import Csv from './access/csv';
import CsvRelated from './access/csv-related';
import Get from './access/get';
import List from './access/list';
import ListRelated from './access/list-related';
import BaseRoute from './base-route';
import AssociateRelated from './modification/associate-related';
import Create from './modification/create';
import Delete from './modification/delete';
import DissociateDeleteRelated from './modification/dissociate-delete-related';
import UpdateField from './modification/update-field';
import UpdateRelation from './modification/update-relation';
import Authentication from './security/authentication';
import IpWhitelist from './security/ip-whitelist';
import ScopeInvalidation from './security/scope-invalidation';
import ErrorHandling from './system/error-handling';
import HealthCheck from './system/healthcheck';
import Logger from './system/logger';
import { ForestAdminHttpDriverServices as Services } from '../services';
import { AgentOptionsWithDefaults as Options } from '../types';
export declare const ROOT_ROUTES_CTOR: (typeof Authentication | typeof IpWhitelist | typeof ScopeInvalidation | typeof ErrorHandling | typeof HealthCheck | typeof Logger)[];
export declare const COLLECTION_ROUTES_CTOR: (typeof Chart | typeof Count | typeof Csv | typeof Get | typeof List | typeof Create | typeof Delete | typeof UpdateField)[];
export declare const RELATED_ROUTES_CTOR: (typeof CountRelated | typeof CsvRelated | typeof ListRelated | typeof AssociateRelated | typeof DissociateDeleteRelated)[];
export declare const RELATED_RELATION_ROUTES_CTOR: (typeof UpdateRelation)[];
export default function makeRoutes(dataSource: DataSource, options: Options, services: Services): BaseRoute[];
//# sourceMappingURL=index.d.ts.map