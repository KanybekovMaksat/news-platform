"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const datasource_toolkit_1 = require("@forestadmin/datasource-toolkit");
const koa_1 = require("koa");
const types_1 = require("../../types");
const base_route_1 = __importDefault(require("../base-route"));
class ErrorHandling extends base_route_1.default {
    constructor() {
        super(...arguments);
        this.type = types_1.RouteType.ErrorHandler;
    }
    setupRoutes(router) {
        router.use(this.errorHandler.bind(this));
    }
    async errorHandler(context, next) {
        try {
            await next();
        }
        catch (e) {
            const status = this.getErrorStatus(e);
            const data = this.getErrorPayload(e);
            context.response.status = status;
            context.response.body = {
                errors: [
                    {
                        name: this.getErrorName(e),
                        detail: this.getErrorMessage(e),
                        // We needed to maintaining this due to the frontend app/utils/ember-error-util.js
                        status,
                        ...(data ? { data } : {}),
                    },
                ],
            };
            if (!this.options.isProduction) {
                process.nextTick(() => this.debugLogError(context, e));
            }
        }
    }
    getErrorStatus(error) {
        if (error instanceof datasource_toolkit_1.ValidationError)
            return types_1.HttpCode.BadRequest;
        if (error instanceof datasource_toolkit_1.ForbiddenError)
            return types_1.HttpCode.Forbidden;
        if (error instanceof datasource_toolkit_1.UnprocessableError)
            return types_1.HttpCode.Unprocessable;
        if (error instanceof koa_1.HttpError)
            return error.status;
        return types_1.HttpCode.InternalServerError;
    }
    getErrorMessage(error) {
        if (error instanceof koa_1.HttpError || error instanceof datasource_toolkit_1.BusinessError) {
            return error.message;
        }
        if (this.options.customizeErrorMessage) {
            const message = this.options.customizeErrorMessage(error);
            if (message)
                return message;
        }
        return 'Unexpected error';
    }
    getErrorName(error) {
        return error.name || error.constructor.name;
    }
    getErrorPayload(error) {
        if (error instanceof datasource_toolkit_1.BusinessError) {
            return error.data;
        }
        return null;
    }
    debugLogError(context, error) {
        const { request } = context;
        const query = JSON.stringify(request.query, null, ' ')?.replace(/"/g, '');
        console.error('');
        console.error(`\x1b[33m===== An exception was raised =====\x1b[0m`);
        console.error(`${request.method} \x1b[34m${request.path}\x1b[36m?${query}\x1b[0m`);
        if (request.method === 'POST' || request.method === 'PUT' || request.method === 'PATCH') {
            const body = JSON.stringify(request.body, null, ' ')?.replace(/"/g, '');
            console.error('');
            console.error(`Body \x1b[36m${body}\x1b[0m`);
        }
        console.error('');
        console.error('\x1b[31m', error.message, '\x1b[0m');
        console.error('');
        console.error(error.stack);
        console.error(`\x1b[33m===================================\x1b[0m`);
        console.error('');
    }
}
exports.default = ErrorHandling;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3ItaGFuZGxpbmcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL3N5c3RlbS9lcnJvci1oYW5kbGluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLHdFQUt5QztBQUV6Qyw2QkFBK0M7QUFFL0MsdUNBQWtEO0FBQ2xELCtEQUFzQztBQUV0QyxNQUFxQixhQUFjLFNBQVEsb0JBQVM7SUFBcEQ7O1FBQ0UsU0FBSSxHQUFHLGlCQUFTLENBQUMsWUFBWSxDQUFDO0lBdUZoQyxDQUFDO0lBckZDLFdBQVcsQ0FBQyxNQUFjO1FBQ3hCLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRU8sS0FBSyxDQUFDLFlBQVksQ0FBQyxPQUFnQixFQUFFLElBQVU7UUFDckQsSUFBSTtZQUNGLE1BQU0sSUFBSSxFQUFFLENBQUM7U0FDZDtRQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ1YsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN0QyxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRXJDLE9BQU8sQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztZQUNqQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRztnQkFDdEIsTUFBTSxFQUFFO29CQUNOO3dCQUNFLElBQUksRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQzt3QkFDMUIsTUFBTSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO3dCQUMvQixrRkFBa0Y7d0JBQ2xGLE1BQU07d0JBQ04sR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO3FC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