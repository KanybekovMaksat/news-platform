import { BaseDataSource, Logger } from '@forestadmin/datasource-toolkit';
import { Connection } from 'mongoose';
import MongooseCollection from './collection';
import { MongooseOptions } from './types';
export default class MongooseDatasource extends BaseDataSource<MongooseCollection> {
    constructor(connection: Connection, options?: MongooseOptions, logger?: Logger);
    /** Create all collections for a given model */
    private addModel;
    private checkAsFields;
    private checkAsModels;
    /**
     * When flattening a field, or transforming a field into a model, we need to check that
     * there are no intermediary arrays. For example, if we have a schema like this:
     *  { a: [{ b: { c: String } }] } and we want to flatten a.b.c, we can't do it.
     */
    private containsIntermediaryArray;
}
//# sourceMappingURL=datasource.d.ts.map