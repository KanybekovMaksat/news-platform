import { Projection } from '@forestadmin/datasource-toolkit';
import { Model, PipelineStage } from 'mongoose';
import { Stack } from '../../types';
/**
 * When using the `asModel` options, users can request/filter on the virtual _id and parentId fields
 * of children (using the generated OneToOne relation).
 *
 * As those fields are not written to mongo, they are injected here so that they can be used like
 * any other field.
 *
 * This could be also be done by preprocessing the filter, and postprocessing the records, but this
 * solution seemed simpler, at the cost of additional pipeline stages when making queries.
 *
 * Note that a projection is taken as a parameter so that only fields which are actually used are
 * injected to save resources.
 */
export default class VirtualFieldsGenerator {
    static addVirtual(model: Model<unknown>, stack: Stack, projection: Projection): PipelineStage[];
    private static getPath;
}
//# sourceMappingURL=virtual-fields.d.ts.map