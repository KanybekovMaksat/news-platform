import { Caller, CollectionSchema, Operator, PaginatedFilter } from '@forestadmin/datasource-toolkit';
import { OperatorDefinition } from './types';
import CollectionDecorator from '../collection-decorator';
import DataSourceDecorator from '../datasource-decorator';
export default class OperatorsEmulateCollectionDecorator extends CollectionDecorator {
    readonly dataSource: DataSourceDecorator<OperatorsEmulateCollectionDecorator>;
    private readonly fields;
    emulateFieldOperator(name: string, operator: Operator): void;
    replaceFieldOperator(name: string, operator: Operator, replaceBy: OperatorDefinition): void;
    protected refineSchema(childSchema: CollectionSchema): CollectionSchema;
    protected refineFilter(caller: Caller, filter: PaginatedFilter): Promise<PaginatedFilter>;
    private replaceLeaf;
    private computeEquivalent;
}
//# sourceMappingURL=collection.d.ts.map