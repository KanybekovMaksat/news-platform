import { ActionField, ActionResult, Caller, CollectionSchema, Filter, RecordData } from '@forestadmin/datasource-toolkit';
import { ActionDefinition } from './types/actions';
import CollectionDecorator from '../collection-decorator';
import DataSourceDecorator from '../datasource-decorator';
export default class ActionCollectionDecorator extends CollectionDecorator {
    readonly dataSource: DataSourceDecorator<ActionCollectionDecorator>;
    private actions;
    addAction(name: string, action: ActionDefinition): void;
    execute(caller: Caller, name: string, data: RecordData, filter: Filter): Promise<ActionResult>;
    getForm(caller: Caller, name: string, data?: RecordData, filter?: Filter): Promise<ActionField[]>;
    protected refineSchema(subSchema: CollectionSchema): CollectionSchema;
    private getContext;
    private dropDefaults;
    private dropIfs;
    private dropDeferred;
    private evaluate;
}
//# sourceMappingURL=collection.d.ts.map