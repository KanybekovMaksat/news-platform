import { BaseDataSource, Caller, Chart, Collection, DataSource, DataSourceSchema } from '@forestadmin/datasource-toolkit';
type CollectionDecoratorConstructor<CollectionDecorator extends Collection> = {
    new (c: Collection, d: DataSource): CollectionDecorator;
};
export default class DataSourceDecorator<CollectionDecorator extends Collection = Collection> extends BaseDataSource<CollectionDecorator> {
    protected readonly childDataSource: DataSource;
    private readonly CollectionDecoratorCtor;
    private readonly addCollectionToChildDataSource;
    get schema(): DataSourceSchema;
    constructor(childDataSource: DataSource, CollectionDecoratorCtor: CollectionDecoratorConstructor<CollectionDecorator>);
    renderChart(caller: Caller, name: string): Promise<Chart>;
    private addCollectionObserver;
}
export {};
//# sourceMappingURL=datasource-decorator.d.ts.map