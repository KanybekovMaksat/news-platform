import { Caller, Collection, Filter, RecordData } from '@forestadmin/datasource-toolkit';
import HookContext from './hook';
import { TCollectionName, TFilter, TRow, TSchema } from '../../../templates';
export declare class HookBeforeUpdateContext<S extends TSchema = TSchema, N extends TCollectionName<S> = TCollectionName<S>> extends HookContext<S, N> {
    protected _filter: Filter;
    protected _patch: RecordData;
    constructor(collection: Collection, caller: Caller, filter: Filter, patch: RecordData);
    get filter(): Readonly<TFilter<S, N>>;
    get patch(): TRow<S, N>;
}
export declare class InternalHookBeforeUpdateContext extends HookBeforeUpdateContext {
    getFilter(): Filter;
}
export declare class HookAfterUpdateContext<S extends TSchema = TSchema, N extends TCollectionName<S> = TCollectionName<S>> extends HookBeforeUpdateContext<S, N> {
}
//# sourceMappingURL=update.d.ts.map