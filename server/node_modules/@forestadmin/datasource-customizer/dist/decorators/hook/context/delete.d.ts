import { Caller, Collection, Filter } from '@forestadmin/datasource-toolkit';
import HookContext from './hook';
import { TCollectionName, TFilter, TSchema } from '../../../templates';
export declare class HookBeforeDeleteContext<S extends TSchema = TSchema, N extends TCollectionName<S> = TCollectionName<S>> extends HookContext<S, N> {
    protected _filter: Filter;
    constructor(collection: Collection, caller: Caller, filter: Filter);
    get filter(): Readonly<TFilter<S, N>>;
}
export declare class InternalHookBeforeDeleteContext extends HookBeforeDeleteContext {
    getFilter(): Filter;
}
export declare class HookAfterDeleteContext<S extends TSchema = TSchema, N extends TCollectionName<S> = TCollectionName<S>> extends HookBeforeDeleteContext<S, N> {
}
//# sourceMappingURL=delete.d.ts.map