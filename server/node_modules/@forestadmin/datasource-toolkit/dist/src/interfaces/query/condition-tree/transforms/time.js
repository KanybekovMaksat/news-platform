"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const luxon_1 = require("luxon");
const factory_1 = __importDefault(require("../factory"));
function format(value) {
    return value.toUTC().toISO({ suppressMilliseconds: true });
}
function compare(operator, dateFn) {
    return {
        dependsOn: [operator],
        forTypes: ['Date', 'Dateonly'],
        replacer: (leaf, tz) => {
            const now = luxon_1.DateTime.utc().setZone(tz);
            return leaf.override({ operator, value: format(dateFn(now, leaf.value)) });
        },
    };
}
function interval(startFn, endFn) {
    return {
        dependsOn: ['LessThan', 'GreaterThan'],
        forTypes: ['Date', 'Dateonly'],
        replacer: (leaf, tz) => {
            const now = luxon_1.DateTime.utc().setZone(tz);
            return factory_1.default.intersect(leaf.override({ operator: 'GreaterThan', value: format(startFn(now, leaf.value)) }), leaf.override({ operator: 'LessThan', value: format(endFn(now, leaf.value)) }));
        },
    };
}
function previousInterval(duration) {
    return interval(now => now.minus({ [duration]: 1 }).startOf(duration), now => now.startOf(duration));
}
function previousIntervalToDate(duration) {
    return interval(now => now.startOf(duration), now => now);
}
exports.default = () => ({
    Before: [compare('LessThan', (_, value) => luxon_1.DateTime.fromISO(value))],
    After: [compare('GreaterThan', (_, value) => luxon_1.DateTime.fromISO(value))],
    Past: [compare('LessThan', now => now)],
    Future: [compare('GreaterThan', now => now)],
    BeforeXHoursAgo: [compare('LessThan', (now, value) => now.minus({ hours: value }))],
    AfterXHoursAgo: [compare('GreaterThan', (now, value) => now.minus({ hours: value }))],
    PreviousWeekToDate: [previousIntervalToDate('week')],
    PreviousMonthToDate: [previousIntervalToDate('month')],
    PreviousQuarterToDate: [previousIntervalToDate('quarter')],
    PreviousYearToDate: [previousIntervalToDate('year')],
    Yesterday: [previousInterval('day')],
    PreviousWeek: [previousInterval('week')],
    PreviousMonth: [previousInterval('month')],
    PreviousQuarter: [previousInterval('quarter')],
    PreviousYear: [previousInterval('year')],
    PreviousXDaysToDate: [
        interval((now, value) => now.minus({ days: value }).startOf('day'), now => now),
    ],
    PreviousXDays: [
        interval((now, value) => now.minus({ days: value }).startOf('day'), now => now.startOf('day')),
    ],
    Today: [
        interval(now => now.startOf('day'), now => now.plus({ day: 1 }).startOf('day')),
    ],
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9pbnRlcmZhY2VzL3F1ZXJ5L2NvbmRpdGlvbi10cmVlL3RyYW5zZm9ybXMvdGltZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLGlDQUErQztBQUcvQyx5REFBOEM7QUFLOUMsU0FBUyxNQUFNLENBQUMsS0FBZTtJQUM3QixPQUFPLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxvQkFBb0IsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBQzdELENBQUM7QUFFRCxTQUFTLE9BQU8sQ0FBQyxRQUFrQixFQUFFLE1BQW9CO0lBQ3ZELE9BQU87UUFDTCxTQUFTLEVBQUUsQ0FBQyxRQUFRLENBQUM7UUFDckIsUUFBUSxFQUFFLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQztRQUM5QixRQUFRLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUU7WUFDckIsTUFBTSxHQUFHLEdBQUcsZ0JBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7WUFFdkMsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDN0UsQ0FBQztLQUNGLENBQUM7QUFDSixDQUFDO0FBRUQsU0FBUyxRQUFRLENBQUMsT0FBcUIsRUFBRSxLQUFtQjtJQUMxRCxPQUFPO1FBQ0wsU0FBUyxFQUFFLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQztRQUN0QyxRQUFRLEVBQUUsQ0FBQyxNQUFNLEVBQUUsVUFBVSxDQUFDO1FBQzlCLFFBQVEsRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRTtZQUNyQixNQUFNLEdBQUcsR0FBRyxnQkFB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