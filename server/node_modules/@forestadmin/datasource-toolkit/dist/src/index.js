"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaUtils = exports.RecordUtils = exports.CollectionUtils = exports.SortValidator = exports.RecordValidator = exports.ProjectionValidator = exports.FieldValidator = exports.ConditionTreeValidator = exports.SortFactory = exports.ProjectionFactory = exports.FilterFactory = exports.ConditionTreeFactory = exports.ConditionTreeEquivalent = exports.Sort = exports.Projection = exports.PaginatedFilter = exports.Page = exports.Filter = exports.ConditionTreeLeaf = exports.ConditionTreeBranch = exports.ConditionTree = exports.Aggregation = exports.BaseDataSource = exports.BaseCollection = exports.allowedOperatorsForColumnType = void 0;
// Misc
__exportStar(require("./errors"), exports);
__exportStar(require("./factory"), exports);
var rules_1 = require("./validation/rules");
Object.defineProperty(exports, "allowedOperatorsForColumnType", { enumerable: true, get: function () { return rules_1.MAP_ALLOWED_OPERATORS_FOR_COLUMN_TYPE; } });
// Base Collection & DataSource
var base_collection_1 = require("./base-collection");
Object.defineProperty(exports, "BaseCollection", { enumerable: true, get: function () { return __importDefault(base_collection_1).default; } });
var base_datasource_1 = require("./base-datasource");
Object.defineProperty(exports, "BaseDataSource", { enumerable: true, get: function () { return __importDefault(base_datasource_1).default; } });
// Query Interface
var aggregation_1 = require("./interfaces/query/aggregation");
Object.defineProperty(exports, "Aggregation", { enumerable: true, get: function () { return __importDefault(aggregation_1).default; } });
var base_1 = require("./interfaces/query/condition-tree/nodes/base");
Object.defineProperty(exports, "ConditionTree", { enumerable: true, get: function () { return __importDefault(base_1).default; } });
var branch_1 = require("./interfaces/query/condition-tree/nodes/branch");
Object.defineProperty(exports, "ConditionTreeBranch", { enumerable: true, get: function () { return __importDefault(branch_1).default; } });
var leaf_1 = require("./interfaces/query/condition-tree/nodes/leaf");
Object.defineProperty(exports, "ConditionTreeLeaf", { enumerable: true, get: function () { return __importDefault(leaf_1).default; } });
var unpaginated_1 = require("./interfaces/query/filter/unpaginated");
Object.defineProperty(exports, "Filter", { enumerable: true, get: function () { return __importDefault(unpaginated_1).default; } });
var page_1 = require("./interfaces/query/page");
Object.defineProperty(exports, "Page", { enumerable: true, get: function () { return __importDefault(page_1).default; } });
var paginated_1 = require("./interfaces/query/filter/paginated");
Object.defineProperty(exports, "PaginatedFilter", { enumerable: true, get: function () { return __importDefault(paginated_1).default; } });
var projection_1 = require("./interfaces/query/projection");
Object.defineProperty(exports, "Projection", { enumerable: true, get: function () { return __importDefault(projection_1).default; } });
var sort_1 = require("./interfaces/query/sort");
Object.defineProperty(exports, "Sort", { enumerable: true, get: function () { return __importDefault(sort_1).default; } });
// Factories
var equivalence_1 = require("./interfaces/query/condition-tree/equivalence");
Object.defineProperty(exports, "ConditionTreeEquivalent", { enumerable: true, get: function () { return __importDefault(equivalence_1).default; } });
var factory_1 = require("./interfaces/query/condition-tree/factory");
Object.defineProperty(exports, "ConditionTreeFactory", { enumerable: true, get: function () { return __importDefault(factory_1).default; } });
var factory_2 = require("./interfaces/query/filter/factory");
Object.defineProperty(exports, "FilterFactory", { enumerable: true, get: function () { return __importDefault(factory_2).default; } });
var factory_3 = require("./interfaces/query/projection/factory");
Object.defineProperty(exports, "ProjectionFactory", { enumerable: true, get: function () { return __importDefault(factory_3).default; } });
var factory_4 = require("./interfaces/query/sort/factory");
Object.defineProperty(exports, "SortFactory", { enumerable: true, get: function () { return __importDefault(factory_4).default; } });
__exportStar(require("./interfaces/action"), exports);
__exportStar(require("./interfaces/caller"), exports);
__exportStar(require("./interfaces/chart"), exports);
__exportStar(require("./interfaces/collection"), exports);
__exportStar(require("./interfaces/query/aggregation"), exports);
__exportStar(require("./interfaces/query/condition-tree/nodes/base"), exports);
__exportStar(require("./interfaces/query/condition-tree/nodes/branch"), exports);
__exportStar(require("./interfaces/query/condition-tree/nodes/leaf"), exports);
__exportStar(require("./interfaces/query/condition-tree/nodes/operators"), exports);
__exportStar(require("./interfaces/query/filter/paginated"), exports);
__exportStar(require("./interfaces/query/filter/unpaginated"), exports);
__exportStar(require("./interfaces/query/sort"), exports);
__exportStar(require("./interfaces/query/page"), exports);
__exportStar(require("./interfaces/record"), exports);
__exportStar(require("./interfaces/schema"), exports);
// Validation
var condition_tree_1 = require("./validation/condition-tree");
Object.defineProperty(exports, "ConditionTreeValidator", { enumerable: true, get: function () { return __importDefault(condition_tree_1).default; } });
var field_1 = require("./validation/field");
Object.defineProperty(exports, "FieldValidator", { enumerable: true, get: function () { return __importDefault(field_1).default; } });
var projection_2 = require("./validation/projection");
Object.defineProperty(exports, "ProjectionValidator", { enumerable: true, get: function () { return __importDefault(projection_2).default; } });
var record_1 = require("./validation/record");
Object.defineProperty(exports, "RecordValidator", { enumerable: true, get: function () { return __importDefault(record_1).default; } });
var sort_2 = require("./validation/sort");
Object.defineProperty(exports, "SortValidator", { enumerable: true, get: function () { return __importDefault(sort_2).default; } });
// Utils
var collection_1 = require("./utils/collection");
Object.defineProperty(exports, "CollectionUtils", { enumerable: true, get: function () { return __importDefault(collection_1).default; } });
var record_2 = require("./utils/record");
Object.defineProperty(exports, "RecordUtils", { enumerable: true, get: function () { return __importDefault(record_2).default; } });
var schema_1 = require("./utils/schema");
Object.defineProperty(exports, "SchemaUtils", { enumerable: true, get: function () { return __importDefault(schema_1).default; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxPQUFPO0FBQ1AsMkNBQXlCO0FBQ3pCLDRDQUEwQjtBQUMxQiw0Q0FBNEc7QUFBbkcsc0hBQUEscUNBQXFDLE9BQWlDO0FBRS9FLCtCQUErQjtBQUMvQixxREFBOEQ7QUFBckQsa0lBQUEsT0FBTyxPQUFrQjtBQUNsQyxxREFBOEQ7QUFBckQsa0lBQUEsT0FBTyxPQUFrQjtBQUVsQyxrQkFBa0I7QUFDbEIsOERBQXdFO0FBQS9ELDJIQUFBLE9BQU8sT0FBZTtBQUMvQixxRUFBd0Y7QUFBL0Usc0hBQUEsT0FBTyxPQUFpQjtBQUNqQyx5RUFBZ0c7QUFBdkYsOEhBQUEsT0FBTyxPQUF1QjtBQUN2QyxxRUFBNEY7QUFBbkYsMEhBQUEsT0FBTyxPQUFxQjtBQUNyQyxxRUFBMEU7QUFBakUsc0hBQUEsT0FBTyxPQUFVO0FBQzFCLGdEQUEwRDtBQUFqRCw2R0FBQSxPQUFPLE9BQVE7QUFDeEIsaUVBQWlGO0FBQXhFLDZIQUFBLE9BQU8sT0FBbUI7QUFDbkMsNERBQXNFO0FBQTdELHlIQUFBLE9BQU8sT0FBYztBQUM5QixnREFBMEQ7QUFBakQsNkdBQUEsT0FBTyxPQUFRO0FBRXhCLFlBQVk7QUFDWiw2RUFBbUc7QUFBMUYsdUlBQUEsT0FBTyxPQUEyQjtBQUMzQyxxRUFBNEY7QUFBbkYsZ0lBQUEsT0FBTyxPQUF3QjtBQUN4Qyw2REFBNkU7QUFBcEUseUhBQUEsT0FBTyxPQUFpQjtBQUNqQyxpRUFBcUY7QUFBNUUsNkhBQUEsT0FBTyxPQUFxQjtBQUNyQywyREFBeUU7QUFBaEUsdUhBQUEsT0FBTyxPQUFlO0FBRS9CLHNEQUFvQztBQUNwQyxzREFBb0M7QUFDcEMscURBQW1DO0FBQ25DLDBEQUF3QztBQUN4QyxpRUFBK0M7QUFDL0MsK0VBQTZEO0FBQzdELGlGQUErRDtBQUMvRCwrRUFBNkQ7QUFDN0Qsb0ZBQWtFO0FBRWxFLHNFQUFvRDtBQUNwRCx3RUFBc0Q7QUFDdEQsMERBQXdDO0FBQ3hDLDBEQUF3QztBQUN4QyxzREFBb0M7QUFDcEMsc0RBQW9DO0FBT3BDLGFBQWE7QUFDYiw4REFBZ0Y7QUFBdkUseUlBQUEsT0FBTyxPQUEwQjtBQUMxQyw0Q0FBK0Q7QUFBdEQsd0hBQUEsT0FBTyxPQUFrQjtBQUNsQyxzREFBeUU7QUFBaEUsa0lBQUEsT0FBTyxPQUF1QjtBQUN2Qyw4Q0FBaUU7QUFBeEQsMEhBQUEsT0FBTyxPQUFtQjtBQUNuQywwQ0FBNkQ7QUFBcEQsc0hBQUEsT0FBTyxPQUFpQjtBQUVqQyxRQUFRO0FBQ1IsaURBQWdFO0FBQXZELDhIQUFBLE9BQU8sT0FBbUI7QUFDbkMseUNBQXdEO0FBQS9DLHNIQUFBLE9BQU8sT0FBZTtBQUMvQix5Q0FBd0Q7QUFBL0Msc0hBQUEsT0FBTyxPQUFlIn0=